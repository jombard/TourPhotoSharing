@model List<TPS.Web.Core.ViewModels.ImageViewModel>

@{
    ViewBag.Title = "My Photos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

<a href="@Url.Action("Upload", "Image")" class="btn btn-default">
    <i class="glyphicon glyphicon-cloud-upload"></i>
    Upload new photos
</a>

<hr/>

@if (Model.Any())
{
    <ul class="list-inline">
        @foreach (var imageModel in Model)
        {
            <li>
                <div class="thumbnail">
                    <div class="row">
                        <div class="col-sm-12">
                            <img src="@imageModel.ImagePath.Replace("~", "..")?@imageModel.Query&maxwidth=150&maxheight=112" alt="@imageModel.AltText" class="image img-responsive" />
                            <div>
                                <a href="#" class="btn btn-block btn-link js-edit-link">
                                    <i class="glyphicon glyphicon-pencil"></i>
                                    Edit
                                </a>
                                @*<a href="#" class="btn btn-block btn-primary js-rotate-link hidden" data-image-id="@imageModel.Id">
                                    <i class="glyphicon glyphicon-refresh"></i>
                                    Rotate
                                </a>*@
                            </div>  
                        </div>
                        <div class="col-sm-12 hidden js-image-edit">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                <div class="form-group">
                                    @Html.LabelFor(m => imageModel.Caption, new {@class = "h3"})
                                    <p>Add a useful description to this image.</p>
                                    @Html.TextAreaFor(m => imageModel.Caption, new {@class = "form-control js-image-caption"})
                                </div>

                                <button type="button" class="btn btn-primary js-save-image" data-image-id="@imageModel.Id">
                                    <i class="glyphicon glyphicon-ok"></i>
                                    Save Changes
                                </button>
                                <button type="button" class="btn btn-link js-cancel-image" data-image-id="@imageModel.Id">
                                    <i class="glyphicon glyphicon-remove"></i>
                                    Cancel Changes
                                </button>
                                <button type="button" class="btn btn-link js-delete-image" data-image-id="@imageModel.Id">
                                    <i class="glyphicon glyphicon-trash"></i>
                                    Remove Photo
                                </button>
                            </div>
                            </div>
                        </div>
                    </div>
                </div>
            </li>
        }
    </ul>
}
else
{
    <p>You have not uploaded any photos</p>
    <a href="@Url.Action("Upload", "Image")" class="btn btn-primary">
        <i class="glyphicon glyphicon-plus-sign"></i>
        Upload a photo now
    </a>
}

@Html.Partial("_ImageModal")

@section Scripts {
    @Scripts.Render("~/Scripts/App/app.min.js")
    <script>
        $(".thumbnail").on("click", "a.js-edit-link", function(e) {
            e.preventDefault();
            var $this = $(this);
            var $thumbnail = $this.closest(".thumbnail");
            var img = $thumbnail.find("img");
            var cols = $thumbnail.find(".col-sm-12");

            $this.addClass("hidden");
            var imgParams = img.attr("src").split("?");
            var imgQuery = new URLSearchParams(imgParams[1]);
            img.attr("src", imgParams[0] + (imgQuery.has("rotate") ? "?rotate=" + imgQuery.get("rotate") : ""));
            $thumbnail.find(".js-rotate-link").removeClass("hidden");
            $thumbnail.find(".js-image-edit").removeClass("hidden");
            $thumbnail.closest("li").attr("style", "display:block;");
            cols.toggleClass("col-sm-12 col-sm-6");
        }).on("click", ".js-rotate-link", function (e) {
            e.preventDefault();
            var $this = $(this);
            var imageId = $this.attr("data-image-id");
            var $thumbnail = $this.closest(".thumbnail");
            var img = $thumbnail.find("img");
            var query = img.attr("src").split("?")[1];
            var options = new URLSearchParams(query);

            var rotate = options.get("rotate");
            if (rotate === "90") {
                options.set("rotate", 180);
            } else if (rotate === "180") {
                options.set("rotate", 270);
            } else if (rotate === "270") {
                options.delete("rotate");
            } else {
                options.set("rotate", 90);
            }

            img.attr("src", img.attr("src").split("?")[0] + "?" + options);

            var imageObj = {
                query: options.toString()
            };

            $.ajax({
                url: "/api/image/" + imageId,
                method: "PUT",
                data: imageObj
            }).done(function (result) {
                console.log("rotate result", result);
            }).fail(function (error) {
                console.log("rotate error", error);
            });

        }).on("click", ".js-save-image", function (e) {
            e.preventDefault();
            var $this = $(this);
            var row = $this.closest(".row");

            var imageId = $this.attr("data-image-id");
            var caption = row.find(".js-image-caption").val();
            row.find(".js-edit-link").removeClass("hidden");
            row.find(".js-rotate-link").addClass("hidden");

            var imageObj = {
                id: imageId,
                caption: caption
            };

            $.ajax({
                url: "/api/image/" + imageId,
                method: "PUT",
                data: imageObj
            }).done(function (result) {
                var img = row.find("img");
                img.parent().toggleClass("col-sm-6 col-sm-12");
                img.attr("src", img.attr("src").split("?")[0] + "?" + img.attr("src").split("?")[1] + "&maxwidth=150&maxheight=112");
                row.find(".js-image-edit").addClass("hidden col-sm-12").removeClass("col-sm-6");
                row.closest("li").attr("style", "display:inline-block;");
            }).fail(function (error) {
                console.log(error);
            });
        }).on("click", ".js-delete-image", function (e) {
            e.preventDefault();

            var button = $(this);

            var result = confirm("Are you sure you want to deleted this item?");

            if (!result) return;

            $.ajax({
                url: "/api/image/" + button.attr("data-image-id"),
                method: "DELETE",
                success: function () {
                    button.closest("li").remove();
                }
            });
        }).on("click", ".js-cancel-image", function(e) {
            e.preventDefault();

            var $this = $(this);
            var row = $this.closest(".row");
            var img = row.find("img");
            row.find(".js-edit-link").removeClass("hidden");
            row.find(".js-rotate-link").addClass("hidden");
            img.parent().toggleClass("col-sm-6 col-sm-12");
            img.attr("src", img.attr("src").split("?")[0] + "?" + img.attr("src").split("?")[1] + "&maxwidth=150&maxheight=112");
            row.find(".js-image-edit").addClass("hidden col-sm-12").removeClass("col-sm-6");
            row.closest("li").attr("style", "display:inline-block;");
        });
    </script>
}